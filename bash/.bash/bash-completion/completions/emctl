# bash completion for emctl                                -*- shell-script -*-

# Bash completion for the Oracle Enterprise Manager 12c Agent

_emctl()
{
    local cur prev words cword
    _init_completion || return

    local commands command options

    commands='annotateconfigfiles clear_property clearstate \
        clearsudoprops config control dumpstate gensudoprops getemhome \
        getmetric getproperty getversion jmxcli lint listplugins pingOMS \
        reload relocate_target resetTZ restcli run_autotune secure set \
        setproperty start startschedule status stop stopschedule switchOMS \
        unsecure updateblkoutts upload verifykey wscli wsmancli'

    if [[ $cword -eq 1 ]]; then
        COMPREPLY=( $( compgen -W "$commands" -- "$cur" ) )
    else
        command=${words[1]}
        case $command in
            clearsudoprops|gensudoprops|getemhome|getversion|pingOMS| \
            verifykey)
                return 0
                ;;
            annotateconfigfiles)
                options='agent'
                ;;
            clear_property)
                options='agent'
                ;;
            clearstate)
                options='agent'
                ;;
            config)
                options='agent'
                ;;
            control)
                options='agent'
                ;;
            dumpstate)
                options='agent'
                ;;
            getmetric)
                options='agent'
                ;;
            getproperty)
                options='agent'
                ;;
            jmxcli)
                options=''
                ;;
            lint)
                options=''
                ;;
            listplugins)
                options='agent'
                ;;
            reload)
                options=''
                ;;
            relocate_target)
                options='agent'
                ;;
            resetTZ)
                options='agent'
                ;;
            restcli)
                options=''
                ;;
            run_autotune)
                options='agent'
                ;;
            secure)
                options='add_trust_cert add_trust_cert_to_jks agent'
                ;;
            set)
                options='credentials'
                ;;
            setproperty)
                options='agent'
                ;;
            start)
                options='agent blackout'
                ;;
            startschedule)
                options='agent'
                ;;
            status)
                options='agent blackout url'
                ;;
            stop)
                options='agent blackout'
                ;;
            stopschedule)
                options='agent'
                ;;
            switchOMS)
                options=''
                ;;
            unsecure)
                options='agent'
                ;;
            updateblkoutts)
                options=''
                ;;
            upload)
                options='agent'
                ;;
            wscli)
                options=''
                ;;
            wsmancli)
                options=''
                ;;
        esac
        COMPREPLY=( $( compgen -W "$options" -- "$cur" ) )

        #if [[ "$cur" == -* ]]; then
        #    # possible options for the command
        #    case $command in
        #        asn1parse)
        #            options='-inform -in -out -noout -offset -length -i -oid \
        #                -strparse'
        #            ;;
        #        ca)
        #            options='-verbose -config -name -gencrl -revoke \
        #                -crl_reason -crl_hold -crl_compromise \
        #                -crl_CA_compromise -crldays -crlhours -crlexts \
        #                -startdate -enddate -days -md -policy -keyfile -key \
        #                -passin -cert -selfsig -in -out -notext -outdir \
        #                -infiles -spkac -ss_cert -preserveDN -noemailDN \
        #                -batch -msie_hack -extensions -extfile -engine \
        #                -subj -utf8 -multivalue-rdn'
        #                ;;
        #        ciphers)
        #            options='-v -ssl2 -ssl3 -tls1'
        #            ;;
        #        crl)
        #            options='-inform -outform -text -in -out -noout -hash \
        #                -issuer -lastupdate -nextupdate -CAfile -CApath'
        #            ;;
        #        crl2pkcs7)
        #            options='-inform -outform -in -out -print_certs'
        #            ;;
        #        dgst)
        #            options='-md5 -md4 -md2 -sha1 -sha -mdc2 -ripemd160 -dss1 \
        #                -c -d -hex -binary -out -sign -verify -prverify \
        #                -signature'
        #            ;;
        #        dsa)
        #            options='-inform -outform -in -passin -out -passout -des \
        #                -des3 -idea -text -noout -modulus -pubin -pubout'
        #            ;;
        #        dsaparam)
        #            options='-inform -outform -in -out -noout -text -C -rand \
        #                -genkey'
        #            ;;
        #        enc)
        #            options='-ciphername -in -out -pass -e -d -a -A -k -kfile \
        #                -S -K -iv -p -P -bufsize -debug'
        #            ;;
        #        dhparam)
        #            options='-inform -outform -in -out -dsaparam -noout -text \
        #                -C -2 -5 -rand'
        #            ;;
        #        gendsa)
        #            options='-out -des -des3 -idea -rand'
        #            ;;
        #        genrsa)
        #            options='-out -passout -des -des3 -idea -f4 -3 -rand'
        #            ;;
        #        pkcs7)
        #            options='-inform -outform -in -out -print_certs -text \
        #                -noout'
        #            ;;
        #        rand)
        #            options='-out -rand -base64'
        #            ;;
        #        req)
        #            options='-inform -outform -in -passin -out -passout -text \
        #                -noout -verify -modulus -new -rand -newkey -newkey \
        #                -nodes -key -keyform -keyout -md5 -sha1 -md2 -mdc2 \
        #                -config -x509 -days -asn1-kludge -newhdr -extensions \
        #                -reqexts section'
        #            ;;
        #        rsa)
        #            options='-inform -outform -in -passin -out -passout \
        #                -sgckey -des -des3 -idea -text -noout -modulus -check \
        #                -pubin -pubout -engine'
        #            ;;
        #        rsautl)
        #            options='-in -out -inkey -pubin -certin -sign -verify \
        #                -encrypt -decrypt -pkcs -ssl -raw -hexdump -asn1parse'
        #            ;;
        #        s_client)
        #            options='-connect -verify -cert -certform -key -keyform \
        #                -pass -CApath -CAfile -reconnect -pause -showcerts \
        #                -debug -msg -nbio_test -state -nbio -crlf -ign_eof \
        #                -quiet -ssl2 -ssl3 -tls1 -no_ssl2 -no_ssl3 -no_tls1 \
        #                -bugs -cipher -starttls -engine -tlsextdebug \
        #                -no_ticket -sess_out -sess_in -rand'
        #            ;;
        #        s_server)
        #            options='-accept -context -verify -Verify -crl_check \
        #                -crl_check_all -cert -certform -key -keyform -pass \
        #                -dcert -dcertform -dkey -dkeyform -dpass -dhparam \
        #                -nbio -nbio_test -crlf -debug -msg -state -CApath \
        #                -CAfile -nocert -cipher -quiet -no_tmp_rsa -ssl2 \
        #                -ssl3 -tls1 -no_ssl2 -no_ssl3 -no_tls1 -no_dhe \
        #                -bugs -hack -www -WWW -HTTP -engine -tlsextdebug \
        #                -no_ticket -id_prefix -rand'
        #            ;;
        #        s_time)
        #            options='-connect -www -cert -key -CApath -CAfile -reuse \
        #                -new -verify -nbio -time -ssl2 -ssl3 -bugs -cipher'
        #            ;;
        #        sess_id)
        #            options='-inform -outform -in -out -text -noout -context \
        #                ID'
        #            ;;
        #        smime)
        #            options='-encrypt -decrypt -sign -verify -pk7out -des \
        #                -des3 -rc2-40 -rc2-64 -rc2-128 -aes128 -aes192 -aes256 \
        #                -in -certfile -signer -recip -inform -passin -inkey \
        #                -out -outform -content -to -from -subject -text -rand'
        #            ;;
        #        speed)
        #            options='-engine'
        #            ;;
        #        verify)
        #            options='-CApath -CAfile -purpose -untrusted -help \
        #                -issuer_checks -verbose -certificates'
        #            ;;
        #        x509)
        #            options='-inform -outform -keyform -CAform -CAkeyform -in \
        #                -out -serial -hash -subject_hash -issuer_hash -subject \
        #                -issuer -nameopt -email -startdate -enddate -purpose \
        #                -dates -modulus -fingerprint -alias -noout -trustout \
        #                -clrtrust -clrreject -addtrust -addreject -setalias \
        #                -days -set_serial -signkey -x509toreq -req -CA -CAkey \
        #                -CAcreateserial -CAserial -text -C -md2 -md5 -sha1 \
        #                -mdc2 -clrext -extfile -extensions -engine'
        #            ;;
        #        md5|md4|md2|sha1|sha|mdc2|ripemd160)
        #            options='-c -d'
        #            ;;
        #    esac
        #    COMPREPLY=( $( compgen -W "$options" -- "$cur" ) )
        #else
        #    if [[ "$command" == speed ]]; then
        #        COMPREPLY=( $( compgen -W 'md2 mdc2 md5 hmac sha1 rmd160 \
        #            idea-cbc rc2-cbc rc5-cbc bf-cbc des-cbc des-ede3 rc4 \
        #            rsa512 rsa1024 rsa2048 rsa4096 dsa512 dsa1024 dsa2048 idea \
        #            rc2 des rsa blowfish' -- "$cur" ) )
        #    else
        #        _filedir
        #    fi
        #fi
    fi
} &&
complete -F _emctl emctl

# annotateconfigfiles agent [<template files dir> <config files dir>]
# clear_property agent -name PROPERTY_NAME
# clearstate agent [TARGETNAME,TARGETTYPE ...] | [-incrementalconfig TARGETNAME,TARGETTYPE[,COLLECTIONITEM] ... ]
# config agent <options>
# config agent credentials [<Target_name>[:<Target_Type>]]
# config agent getTZ
# config agent listtargets
# config agent updateTZ
# control agent runCollection TARGETNAME:TARGETTYPE COLLECTIONITEM ...
# control agent unsuspend_metric TARGETNAME,TARGETTYPE COLLECTIONITEM METRIC_COLLNAME
# dumpstate agent [-dump_full_state] [COMPONENTNAME ...]  
# getmetric agent TARGETNAME,TARGETTYPE,METRICNAME [-force]
# getproperty agent {-name NAME_1 [... NAME_N] | -category NAME_1 }
# jmxcli [-help] [-t JVM help | -t WebLogic help] [<Oracle Home of OC4J> help]
# lint [-help] {-plugin_id <plugin_id> | [-metadata <metadata_file>] [-collection <default_collection_file]} [-err_level {info|warn|error}]
# listplugins agent [<plugin_id> *]
# reload [agent dynamicproperties [-upload_timeout TIMEOUT] TARGETNAME:TARGETTYPE ...]
# relocate_target agent TARGETNAME TARGETTYPE [<name1>=<value1>]* [-force]
# resetTZ agent
# restcli [-help]
# run_autotune agent
# secure add_trust_cert -trust_certs_loc <loc>
# secure add_trust_cert_to_jks [-password <password> -trust_certs_loc <loc> -alias <alias>]
# secure agent [registration password] [-emdWalletSrcUrl <url>]
# set credentials TARGET_NAME:TARGET_TYPE
# setproperty agent [-allow_new] -name PROPERTY_NAME -value PROPERTY_VALUE
# start agent
# start blackout BLACKOUTNAME [-nodeLevel] [TARGETNAME[:TARGETTYPE]]... [-d DURATION] [-allow_jobs] [-nowait]
# startschedule agent -type TARGETTYPE
# startschedule agent TARGETNAME,TARGETTYPE
# status agent
# status agent -secure [-omsurl <http://<oms-hostname>:<oms-unsecure-port>/em/*>]
# status agent [TIMEOUT]
# status agent cpu [-depth n | -full_cpu_report ]
# status agent dbconnections
# status agent jobs
# status agent mcache TARGET_NAME,TARGET_TYPE[,COLLECTION_ITEM]
# status agent oci
# status agent scheduler [-summary]
# status agent target TARGET_NAME,TARGET_TYPE
# status agent verify
# status blackout [TARGETNAME[:TARGETTYPE]]...
# status url URL ...
# stop agent
# stop agent
# stop blackout BLACKOUTNAME [-nowait]
# stopschedule agent -type TARGETTYPE
# stopschedule agent TARGETNAME,TARGETTYPE
# switchOMS REPOSITORY_URL
# unsecure agent
# updateblkoutts OLD_TIMEZONE NEW_TIMEZONE
# upload agent
# wscli [-help]
# wsmancli [-help]

# ex: ts=4 sw=4 et filetype=sh
